//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;

public class UserActionsDB : BaseDB
{
	private User curUser
	{
		get;
		set;
	}
    private byte[] CreateSalt(int size)
    {
        //Generate a cryptographic random number.
        RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();
        byte[] buff = new byte[size];
        rng.GetBytes(buff);

        // Return a Base64 string representation of the random number.
        return buff;
    }

    public virtual byte[] SaltAndHashPassword(string password)
    {
        byte[] plainText = Encoding.ASCII.GetBytes(password);
        HashAlgorithm algorithm = new SHA256Managed();
        byte[] salt = CreateSalt(256);
        byte[] plainTextWithSaltBytes =
          new byte[password.Length + salt.Length];

        for (int i = 0; i < plainText.Length; i++)
        {
            plainTextWithSaltBytes[i] = plainText[i];
        }
        for (int i = 0; i < salt.Length; i++)
        {
            plainTextWithSaltBytes[plainText.Length + i] = salt[i];
        }

        return algorithm.ComputeHash(plainTextWithSaltBytes);
    }

    public bool CompareByteArrays(byte[] passHash, string entered)
    {
        byte[] enteredPass = Encoding.ASCII.GetBytes(entered);
        if (enteredPass.Length != passHash.Length)
        {
            return false;
        }

        for (int i = 0; i < passHash.Length; i++)
        {
            if (passHash[i] != enteredPass[i])
            {
                return false;
            }
        }

        return true;
    }

    public virtual User SignIn(String userName, string Password)
	{
		throw new System.NotImplementedException();
	}

	public virtual bool CreateUser(User  user)
	{
		throw new System.NotImplementedException();
	}

	public virtual bool EditUser(User user)
	{
		throw new System.NotImplementedException();
	}

}

